# spring.application.name=springapi

# ========== DATABASE CONFIG ==========
# here "jdbc:postgresql://localhost:5432/postgres" at the end "/postgres"
# can be replaced with the actual DB name, example customerDB.
#spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/CustomerDB
spring.datasource.username=postgres
spring.datasource.password=root
spring.datasource.driver-class-name=org.postgresql.Driver

# ========== JPA / HIBERNATE CONFIG ==========
# "dialect" class is responsible for generation of SQL queries(Native SQL)
# based on database being used, because we are using Postgres
# org.hibernate.dialect.PostgreSQLDialect in this we have mentioned PostgreSQLDialect.

#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true

# spring.jpa.hibernate.ddl-auto=create-drop , create-drop flag used for creating new
# table while launching the app and drop once we close it.
# We can also use "create" flag, it will create new table on launch.
# We can also use "update" flag, it will update the existing table.
